"""Source Program for Homework #5 for CS 3A
Written by Dong Hee Jang, 6/8/2018
-----------------Assignment 5 Part 1 Source--------------------"""
# Set up list of numbers to check if prime.
candidatePrimes = [10, 12, 15, 17, 31, 89, 97, 3335, 62542, 967584]

# Loop through each candidate in list
for candidate in candidatePrimes:
    num = 2
    # Assume candidate is a prime number
    isPrime = True
    # Use half of the integer of the value of candidate
    while num <= candidate // 2:
        # If the mod division is equal to zero, is not prime
        if candidate % num == 0:
            isPrime = False
            break
        num += 1
    if isPrime:
        print("{0} is prime".format(candidate))
    else:
        print("{0} is not prime".format(candidate))

"""--------------Assingment 5 Part 1 Run------------------------
C:\Users\Brendan\PycharmProjects\untitled\venv\Scripts\python.exe C:/Users/Brendan/PythonProjects/Foothill_5/cs_3_assignment_5_part_1.py
10 is not prime
12 is not prime
15 is not prime
17 is prime
31 is prime
89 is prime
97 is prime
3335 is not prime
62542 is not prime
967584 is not prime

Process finished with exit code 0
----------------------------END----------------------------"""

"""---------------Assignment 5 Part 2 Source----------------"""
# Function definitions
def isPrime(p):
    """p: Prime integers greater than 1, return: p. If not return: 0."""

    num = 2

    # Use half of the integer of the value of candidate
    while num <= p // 2:
        # If mod division is equal to zero, is not prime
        if p % num == 0:
            return 0
        num += 1
    return p

# Get integer input. If input == p value is prime, else value is not prime
p = int(input("Enter an integer greater than 1: "))

if isPrime(p) == p:
    print("Result is {0}. {1} is prime.".format(isPrime(p), p))
else:
    print("Result is {0}. {1} is not prime.".format(isPrime(p), p))

"""---------------Assignment 5 Part 2 Run----------------------
C:\Users\Brendan\PycharmProjects\untitled\venv\Scripts\python.exe C:/Users/Brendan/PythonProjects/Foothill_5/cs_3_assignment_5_part_2.py
Enter an integer greater than 1: 11
Result is 11. 11 is prime.

Process finished with exit code 0

C:\Users\Brendan\PycharmProjects\untitled\venv\Scripts\python.exe C:/Users/Brendan/PythonProjects/Foothill_5/cs_3_assignment_5_part_2.py
Enter an integer greater than 1: 12
Result is 0. 12 is not prime.

Process finished with exit code 0

C:\Users\Brendan\PycharmProjects\untitled\venv\Scripts\python.exe C:/Users/Brendan/PythonProjects/Foothill_5/cs_3_assignment_5_part_2.py
Enter an integer greater than 1: 59
Result is 59. 59 is prime.

Process finished with exit code 0
----------------------------END---------------------------------"""

"""------------------Assignment 5 Part 3 Source--------------------"""
def isPrime(p):
    """p: Prime integers greater than 1, return: p. If not return: 0."""

    num = 2

    # Use half of the integer of the value of candidate
    while num <= p // 2:
        # If mod division is equal to 0, is not prime
        if p % num == 0:
            return 0
        num += 1
    return p

def primes1000():
    """Finds only the first 3 primes larger than 1000 using isPrime()."""

    number = 1000
    primes = 0

    # Set parameters
    while (primes < 3) or (number > 1500):

        # isPrime function to test for prime
        if isPrime(number) == number:
            print("{0} is prime.".format(number))
            primes += 1
        number += 1

# Main program ------------------------------------
primes1000()

"""-----------------Assignment 5 Part 3 Run----------------------
C:\Users\Brendan\PycharmProjects\untitled\venv\Scripts\python.exe C:/Users/Brendan/PythonProjects/Foothill_5/cs_3_assignment_5_part_3.py
1009 is prime.
1013 is prime.
1019 is prime.

Process finished with exit code 0
--------------------------End-----------------------------"""



